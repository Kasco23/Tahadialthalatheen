name: 'Copilot Setup Steps'

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # --- Node & pnpm setup ---
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install JavaScript dependencies
        run: pnpm install

      - name: Install Netlify CLI
        run: pnpm add -g netlify-cli

      - name: Install Supabase CLI as dev dependency
        run: pnpm add -D supabase

      - name: Verify Supabase CLI
        run: pnpm exec supabase --version || true

      # --- Python & MCP tools setup ---
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Cache Python package installs
      - name: Cache pipx environment
        uses: actions/cache@v4
        with:
          path: ~/.local/pipx
          key: ${{ runner.os }}-pipx-${{ hashFiles('.github/workflows/copilot-setup-steps.yml') }}

      - name: Cache uv packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('.github/workflows/copilot-setup-steps.yml') }}

      - name: Install uv (Python package manager)
        run: pip install uv

      - name: Install pipx
        run: pip install pipx

      - name: Install ImageSorcery MCP
        run: pipx install imagesorcery-mcp

      - name: Install Playwright browsers
        run: npx -y playwright install --with-deps

      # --- Project validation (optional, allow failures) ---
      - name: Validate build (allow errors)
        run: pnpm run build
        continue-on-error: true

      - name: Run lint and tests
        run: pnpm test || pnpm run lint
        continue-on-error: true

      # --- Debug MCP availability ---
      - name: Test MCP server installations
        run: |
          echo "Testing MCP server availability..."
          npx --version
          echo "✓ NPX available for Node.js MCP servers"

          imagesorcery-mcp --version || echo "⚠ ImageSorcery MCP not found"
          npx -y @playwright/mcp@latest --help || echo "⚠ Playwright MCP not found"

          uv --version || echo "⚠ UV not available"
          pipx --version || echo "⚠ PIPX not available"
        continue-on-error: true
