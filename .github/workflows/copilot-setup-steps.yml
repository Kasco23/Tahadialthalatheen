name: Copilot Setup Steps

on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up pnpm
        uses: pnpm/action-setup@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Netlify CLI
        run: npm install -g netlify-cli@17

      - name: Link Netlify project
        run: netlify link --id "$NETLIFY_PROJECT_ID"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_PROJECT_ID: ${{ secrets.NETLIFY_PROJECT_ID }}

      - name: Authenticate Netlify CLI
        run: netlify status
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Verify required environment variables
        run: |
          required=(VITE_SUPABASE_DATABASE_URL VITE_SUPABASE_ANON_KEY DAILY_API_KEY VITE_DAILY_DOMAIN NETLIFY_AUTH_TOKEN NETLIFY_PROJECT_ID)
          missing=0
          for var in "${required[@]}"; do
            if [ -z "${!var}" ]; then
              echo "::error::‚ùå $var is missing"
              missing=1
            else
              echo "‚úÖ $var is set"
            fi
          done
          exit $missing
        env:
          VITE_SUPABASE_DATABASE_URL: ${{ vars.VITE_SUPABASE_DATABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ vars.VITE_SUPABASE_ANON_KEY }}
          DAILY_API_KEY: ${{ secrets.DAILY_API_KEY }}
          VITE_DAILY_DOMAIN: ${{ vars.VITE_DAILY_DOMAIN }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_PROJECT_ID: ${{ vars.NETLIFY_PROJECT_ID }}

      - name: List all repository variables
        run: |
          echo "üì¶ Repository variables available to this workflow:"
          for var in $(compgen -v | grep '^VITE\|^NETLIFY'); do
            echo "$var=${!var}"
          done

      - name: List all repository secrets
        run: |
          echo "üîê Repository secrets (names only, values are masked):"
          echo "NETLIFY_AUTH_TOKEN=${{ secrets.NETLIFY_AUTH_TOKEN != '' && 'set' || 'missing' }}"
          echo "DAILY_API_KEY=${{ secrets.DAILY_API_KEY != '' && 'set' || 'missing' }}"
