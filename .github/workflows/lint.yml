name: Code Quality

on:
  push:
    branches: [main, minimal]
  pull_request:
    paths:
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.js'
      - '**/*.jsx'
      - 'package.json'
      - 'pnpm-lock.yaml'

env:
  NODE_VERSION: 22
  PNPM_VERSION: 10

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run TypeScript check
        run: pnpm tsc --noEmit

      - name: Run ESLint
        run: pnpm lint

      - name: Check code formatting
        run: |
          pnpm prettier --check "**/*.{ts,tsx,js,jsx,json,md}"
          if [ $? -ne 0 ]; then
            echo "❌ Code formatting issues found. Run 'pnpm format' to fix them."
            exit 1
          fi
          echo "✅ Code formatting is correct"

  dependency-check:
    name: Dependency Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Run security audit
        run: |
          pnpm audit --audit-level high
          echo "✅ No high-severity vulnerabilities found"

      - name: Check for outdated dependencies
        run: |
          pnpm outdated || echo "⚠️ Some dependencies might be outdated"
